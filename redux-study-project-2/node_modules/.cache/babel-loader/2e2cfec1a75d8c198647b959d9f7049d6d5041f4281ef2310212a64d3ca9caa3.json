{"ast":null,"code":"import { uiActions } from \"./ui-slice.js\";\nimport { CartActions } from \"./mycart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-backend-91eb5-default-rtdb.firebaseio.com/cart.json \", {\n        method: \"GET\"\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data.\");\n      }\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(CartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sent cart data failed.\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"peding\",\n      title: \"Sending...\",\n      message: \"Sending cart data.\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-backend-91eb5-default-rtdb.firebaseio.com/cart.json \", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully.\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sent cart data failed.\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","CartActions","fetchCartData","dispatch","fetchData","response","fetch","method","data","json","ok","Error","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","body","JSON","stringify"],"sources":["/Users/dongsulee/workspace/2024/redux-study-project-2/src/store/cart-action.js"],"sourcesContent":["import { uiActions } from \"./ui-slice.js\";\nimport { CartActions } from \"./mycart-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://react-backend-91eb5-default-rtdb.firebaseio.com/cart.json \",\n        { method: \"GET\" }\n      );\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data.\");\n      }\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(\n        CartActions.replaceCart({\n          items: cartData.items || [],\n          totalQuantity: cartData.totalQuantity,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sent cart data failed.\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"peding\",\n        title: \"Sending...\",\n        message: \"Sending cart data.\",\n      })\n    );\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-backend-91eb5-default-rtdb.firebaseio.com/cart.json \",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully.\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sent cart data failed.\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAAoE,EACpE;QAAEC,MAAM,EAAE;MAAM,CAClB,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAElC,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,OAAOH,IAAI;IACb,CAAC;IACD,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMR,SAAS,CAAC,CAAC;MAClCD,QAAQ,CACNF,WAAW,CAACY,WAAW,CAAC;QACtBC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG;MAC1B,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdb,QAAQ,CACNH,SAAS,CAACiB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOnB,QAAQ,IAAK;IACzBA,QAAQ,CACNH,SAAS,CAACiB,gBAAgB,CAAC;MACzBC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAAoE,EACpE;QACEC,MAAM,EAAE,KAAK;QACbiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBZ,KAAK,EAAEQ,IAAI,CAACR,KAAK;UACjBC,aAAa,EAAEO,IAAI,CAACP;QACtB,CAAC;MACH,CACF,CAAC;MAED,IAAI,CAACV,QAAQ,CAACK,EAAE,EAAE;QAChB,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MACxC;IACF,CAAC;IAED,IAAI;MACF,MAAMY,WAAW,CAAC,CAAC;MACnBpB,QAAQ,CACNH,SAAS,CAACiB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdb,QAAQ,CACNH,SAAS,CAACiB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}