{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id == newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id == id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n        //existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"peding\",\n      title: \"Sending...\",\n      message: \"Sending cart data.\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-backend-91eb5-default-rtdb.firebaseio.com/cart.json \", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully.\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sent cart data failed.\"\n      }));\n    }\n  };\n};\nexport const CartActions = CartSlice.actions;\nexport default CartSlice;","map":{"version":3,"names":["createSlice","uiActions","CartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemToCart","changed","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","CartActions","actions"],"sources":["/Users/dongsulee/workspace/2024/redux-study-project-2/src/store/mycart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\n\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], totalQuantity: 0 },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id == newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id == id);\n\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n        //existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"peding\",\n        title: \"Sending...\",\n        message: \"Sending cart data.\",\n      })\n    );\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-backend-91eb5-default-rtdb.firebaseio.com/cart.json \",\n        { method: \"PUT\", body: JSON.stringify(cart) }\n      );\n\n      if (!response.ok) {\n        new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try{\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully.\",\n        })\n      );\n    }catch(error){\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sent cart data failed.\",\n        })\n      );\n    }\n   };\n};\n\nexport const CartActions = CartSlice.actions;\nexport default CartSlice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}